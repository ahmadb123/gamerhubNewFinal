# spring.application.name=gamerHub
# spring.datasource.url=jdbc:mysql://database-1.chuswo0kiors.us-east-2.rds.amazonaws.com:3306/gamerhubDB
# spring.datasource.username=Gamerhub
# spring.datasource.password=9788107418
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# jwt.secret=qTvOeUJ1QaSgRQhoxMznFUMzP6q09nNEFqlvwVb0Q+s=
# jwt.expiration=86400000
# spring.jpa.hibernate.ddl-auto=update

# # URL Steam should redirect back to after authentication (frontend)
# steam.openid.returnUrl=http://localhost:3000/platform-select

# # URL used as the realm/return_to for OpenID authentication with Steam (backend)
# steam.openid.realm=http://localhost:8080/steam/return
# spring.mvc.dispatch-options-request=true


# # FOR DISCORD OAUTH2 -
 
# discord.client.id=1362087489774289218
# discord.scope=identify email
# discord.redirect.uri=http://localhost:8080/auth/discord/callback
# discord.client.secret="FG1x4sdWTIYaf_2Sa0Yd4SXu7LMEKo9o"

# server.port=8080
# spring.autoconfigure.exclude=\
#   org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\
#   org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration



# ===== App =====
spring.application.name=gamerHub

# Bind to Azureâ€™s injected PORT (fallback 8080 locally)
server.port=${PORT:8080}
server.forward-headers-strategy=framework

# ===== DataSource (AWS RDS MySQL) =====
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.hikari.initialization-fail-timeout=0
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:10}

# ===== JPA/Hibernate =====
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# ===== JWT =====
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION:86400000}

# ===== Steam OpenID =====
# Frontend page Steam should return the user to *after* auth
steam.openid.returnUrl=${STEAM_RETURN_URL:https://purple-flower-07a4ede1e.2.azurestaticapps.net/platform-select}
# Backend OpenID realm/return_to (your API base)
steam.openid.realm=${STEAM_REALM:https://${APP_HOST:localhost}:${PORT:8080}/steam/return}

# ===== Discord OAuth2 =====
discord.client.id=${DISCORD_CLIENT_ID}
discord.client.secret=${DISCORD_CLIENT_SECRET}
discord.scope=identify email
discord.redirect.uri=${DISCORD_REDIRECT_URI:https://${APP_HOST:localhost}:${PORT:8080}/auth/discord/callback}

# ===== Web / CORS =====
spring.mvc.dispatch-options-request=true
spring.web.cors.allowed-origins=https://purple-flower-07a4ede1e.2.azurestaticapps.net
spring.web.cors.allowed-methods=GET,POST,PUT,PATCH,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
